name: Python CI (uv + Cloudsmith — wheel-only)

on:
  push:          { branches: ["main"] }
  pull_request:  { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write               # needed for Cloudsmith OIDC

env:
  CS_ORG:   globex-innovations
  CS_REPO:  acme-nonprod
  SERVICE:  ci_acme_service      # Cloudsmith service-account
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    # 1. OIDC login – populates $CLOUDSMITH_API_KEY
    - name: Cloudsmith OIDC login
      uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
      with:
        oidc-namespace:    ${{ env.CS_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only:    "true"
        
    # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
    - name: Set PIP index URL for Cloudsmith
      run: |
        echo "PIP_INDEX_URL=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install flask numpy --index-url $PIP_INDEX_URL
        if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url $PIP_INDEX_URL; fi

    # 5) Ensure Snyk uses this interpreter
    - name: Pin Snyk to this Python
      run: echo "SNYK_PYTHON_INTERPRETER=$(which python)" >> $GITHUB_ENV

    # 6) Snyk test
    - name: Snyk test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        npm -g i snyk
        snyk auth "${SNYK_TOKEN}"
        # Print pip index again (masked) just before scan
        python -m pip config list | sed -E 's/(_token:)[^@]+@/\1****@/'
        snyk test --file=requirements.txt || true  # adjust policy as needed

        # --- Docker image scan with Snyk (from Cloudsmith) ---

    # Login to Cloudsmith Docker registry using the OIDC-derived API key
    - name: Docker login to Cloudsmith
      run: |
        echo "$CLOUDSMITH_API_KEY" | docker login dl.cloudsmith.io -u token --password-stdin

    # Pull the image from Cloudsmith (evidence in Cloudsmith download logs)
    - name: Pull image from Cloudsmith
      env:
        IMAGE_PATH: dl.cloudsmith.io/${{ env.CS_ORG }}/${{ env.CS_REPO }}/YOUR_IMAGE_NAME:YOUR_TAG
      run: |
        docker pull "$IMAGE_PATH"
        docker inspect "$IMAGE_PATH" --format='{{index .RepoDigests 0}}' || true

    # Install Snyk CLI and scan the container image
    - name: Snyk container scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        IMAGE_PATH: dl.cloudsmith.io/${{ env.CS_ORG }}/${{ env.CS_REPO }}/YOUR_IMAGE_NAME:YOUR_TAG
      run: |
        npm -g i snyk
        snyk auth "${SNYK_TOKEN}"
        # Quick test (does not fail the build; adjust to your policy)
        snyk container test "$IMAGE_PATH" --severity-threshold=high || true
        # Publish results to Snyk Projects (so Snyk remains source of truth)
        snyk container monitor "$IMAGE_PATH"

