name: Python CI (uv + Cloudsmith)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write           # for Cloudsmith OIDC

env:
  CS_ORG:  globex-innovations
  CS_REPO: future-nonprod
  SERVICE: ci_future_service           # Cloudsmith service-account slug
  # Single source-of-truth for index
  #CS_PY_INDEX: https://token:${{ secrets.CLOUDSMITH_API_KEY }}@dl.cloudsmith.io/basic/globex-innovations/future-nonprod/python/simple/

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # --- Authenticate to Cloudsmith (OIDC, no secrets checked-in) ---
      - name: Cloudsmith OIDC login
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace: ${{ env.CS_ORG }}
          oidc-service-slug: ${{ env.SERVICE }}
          oidc-auth-only: "true"

      # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
      - name: Set PIP index URL for Cloudsmith
        run: |
          echo "CS_PY_INDEX=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV

      # Make uv/pip **refuse** to consult PyPI directly
      - name: Export Cloudsmith index for uv/pip
        run: |
          echo "PIP_INDEX_URL=${{ env.CS_PY_INDEX }}" >> $GITHUB_ENV
          echo "UV_PIP_INDEX_URL=${{ env.CS_PY_INDEX }}" >> $GITHUB_ENV
          echo "UV_PIP_NO_INDEX=1"              >> $GITHUB_ENV   # hard-fail if dependency isnâ€™t in Cloudsmith/upstream

      # --- Install deps with uv (no compile file dance needed) ---
      - name: Install dependencies with uv
        run: |
          pip install uv
          uv pip install --system -r requirements.in

      - name: Run tests
        run: pytest -q

      # -----------------------------------------------------------------
      # OPTIONAL: Build & upload *when* the project contains pyproject.toml
      # -----------------------------------------------------------------
      # - name: Build & publish
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main' && hashFiles('pyproject.toml') != ''
      #   run: |
      #     uv pip install --system build twine
      #     python -m build
      #     twine upload \
      #       --repository-url https://api.cloudsmith.io/python/${{ env.CS_ORG }}/${{ env.CS_REPO }}/ \
      #       --username token \
      #       --password ${{ secrets.CLOUDSMITH_API_KEY }} \
      #       dist/*



