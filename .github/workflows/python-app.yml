name: Python CI (uv + Cloudsmith — wheel-only)

on:
  push:          { branches: ["main"] }
  pull_request:  { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write               # needed for Cloudsmith OIDC

env:
  CS_ORG:   globex-innovations
  CS_REPO:  abigproduct-nonprod 
  SERVICE:  ci_abigproduct_service      # Cloudsmith service-account

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    # 1. OIDC login – populates $CLOUDSMITH_API_KEY
    - name: Cloudsmith OIDC login
      uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
      with:
        oidc-namespace:    ${{ env.CS_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only:    "true"

    # 2. Export creds for uv (match [[tool.uv.index]] name = "cloudsmith")
    - name: Export Cloudsmith creds for uv
      run: |
        echo "UV_INDEX_CLOUDSMITH_USERNAME=token"           >> "$GITHUB_ENV"
        echo "UV_INDEX_CLOUDSMITH_PASSWORD=$CLOUDSMITH_API_KEY" >> "$GITHUB_ENV"
        echo "UV_PIP_NO_INDEX=1"                            >> "$GITHUB_ENV"   # block fallback to PyPI
        echo "UV_PIP_VERBOSE=2"                             >> "$GITHUB_ENV"
        echo "UV_PUBLISH_USERNAME=token"                    >> "$GITHUB_ENV"
        echo "UV_PUBLISH_PASSWORD=$CLOUDSMITH_API_KEY"      >> "$GITHUB_ENV"

    # 3. Install uv & build toolchain
    - name: Install uv + build
      run: pip install uv build

    # 4. Install project dependencies (uses pyproject.toml)
    - name: Install dependencies
      run: uv pip install --system --no-cache -r pyproject.toml

    
