name: Python CI (uv + Cloudsmith â€” wheel-only)

on:
  push:          { branches: ["main"] }
  pull_request:  { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write               # needed for GitHub OIDC token

env:
  CS_ORG:   globex-innovations
  CS_REPO:  acme-nonprod
  SERVICE:  ci_acme_service      # Cloudsmith service-account

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    # 1) Get a GitHub OIDC token, exchange it with Cloudsmith for a short-lived API key,
    #    and expose it as CLOUDSMITH_API_KEY (same env var the action would have set).
    - name: Cloudsmith OIDC login (curl)
      shell: bash
      run: |
        set -euo pipefail

        # Request a GitHub OIDC JWT (audience string must match your Cloudsmith OIDC provider)
        OIDC_JWT=$(curl -sS \
          -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" \
          | jq -r '.value')

        if [[ -z "$OIDC_JWT" || "$OIDC_JWT" == "null" ]]; then
          echo "Failed to obtain GitHub OIDC token"; exit 1
        fi

        # Exchange JWT for a short-lived Cloudsmith API key
        CS_API_KEY=$(curl -sS -X POST \
          -H "Content-Type: application/json" \
          -d "{\"oidc_token\":\"${OIDC_JWT}\",\"service_slug\":\"${SERVICE}\"}" \
          "https://api.cloudsmith.io/openid/${CS_ORG}/" \
          | jq -r '.token')

        if [[ -z "$CS_API_KEY" || "$CS_API_KEY" == "null" ]]; then
          echo "Failed to exchange token with Cloudsmith"; exit 1
        fi

        # Make it available to later steps (same var your existing step expects)
        echo "CLOUDSMITH_API_KEY=${CS_API_KEY}" >> "$GITHUB_ENV"

        # (Optional) sanity check
        python -m pip install --user cloudsmith-cli >/dev/null
        export PATH="$HOME/.local/bin:$PATH"
        cloudsmith whoami || true

    # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
    - name: Set PIP index URL for Cloudsmith
      run: |
        echo "PIP_INDEX_URL=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest --index-url $PIP_INDEX_URL
        if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url $PIP_INDEX_URL; fi
