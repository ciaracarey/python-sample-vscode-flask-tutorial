name: Python CI (uv + Cloudsmith — wheel-only)

on:
  push:          { branches: ["main"] }
  pull_request:  { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write               # needed for Cloudsmith OIDC

env:
  CS_ORG:   globex-innovations
  CS_REPO:  acme-nonprod
  SERVICE:  ci_acme_service      # Cloudsmith service-account
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    # 1. OIDC login – populates $CLOUDSMITH_API_KEY
    - name: Cloudsmith OIDC login
      uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
      with:
        oidc-namespace:    ${{ env.CS_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only:    "true"
        
    # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
    - name: Set PIP index URL for Cloudsmith
      run: |
        echo "PIP_INDEX_URL=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install flask numpy --index-url $PIP_INDEX_URL
        if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url $PIP_INDEX_URL; fi
    
    # --- Docker: build, push (with Docker actions), then Snyk scan ---

    # Login to Cloudsmith Docker registry via docker/login-action
    - name: Docker login to Cloudsmith
      uses: docker/login-action@v3
      with:
        registry: docker.cloudsmith.io
        username: token
        password: ${{ env.CLOUDSMITH_API_KEY }}
