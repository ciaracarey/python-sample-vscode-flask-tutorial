name: Python CI (uv + Cloudsmith — wheel-only)

on:
  push:          { branches: ["main"] }
  pull_request:  { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write               # needed for Cloudsmith OIDC

env:
  CS_ORG:   globex-innovations
  CS_REPO:  acme-nonprod
  SERVICE:  ci_acme_service      # Cloudsmith service-account
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    # 1. OIDC login – populates $CLOUDSMITH_API_KEY
    - name: Cloudsmith OIDC login
      uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
      with:
        oidc-namespace:    ${{ env.CS_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only:    "true"
        
    # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
    - name: Set PIP index URL for Cloudsmith
      run: |
        echo "PIP_INDEX_URL=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV
    #- name: Install dependencies
    #  run: |
     #   python -m pip install --upgrade pip
      #  #pip install flask numpy --index-url $PIP_INDEX_URL
       # if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url $PIP_INDEX_URL; fi
       
    # 5) Ensure Snyk uses this interpreter
    - name: Pin Snyk to this Python
      run: echo "SNYK_PYTHON_INTERPRETER=$(which python)" >> $GITHUB_ENV

    # 6) Snyk test
    - name: Snyk test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        npm -g i snyk
        snyk auth "${SNYK_TOKEN}"
        
        # Write pip.conf pointing to Cloudsmith
        mkdir -p ~/.pip
        cat > ~/.pip/pip.conf <<EOF
        [global]
        index-url = https://token:${CLOUDSMITH_API_KEY}@dl.cloudsmith.io/basic/${CS_ORG}/${CS_REPO}/python/simple/
        extra-index-url =
        EOF
        # Print pip index again (masked) just before scan
        #python -m pip config list | sed -E 's/(_token:)[^@]+@/\1****@/'
        #snyk test --file=requirements.txt || true  # adjust policy as needed
        snyk test --file=requirements.txt --package-manager=pip --command=.venv/bin/python


    # --- Docker: build, push (with Docker actions), then Snyk scan ---

    # Login to Cloudsmith Docker registry via docker/login-action
    - name: Docker login to Cloudsmith
      uses: docker/login-action@v3
      with:
        registry: docker.cloudsmith.io
        username: token
        password: ${{ env.CLOUDSMITH_API_KEY }}

# Pull the alpine image from your Cloudsmith repo
 #   - name: Pull image from Cloudsmith
  #    env:
   #     IMAGE_PATH: docker.cloudsmith.io/${{ env.CS_ORG }}/${{ env.CS_REPO }}/django:latest
    #  run: |
     #   docker pull "$IMAGE_PATH"
      #  # capture digest for evidence/correlation in Cloudsmith logs
       # docker inspect "$IMAGE_PATH" --format='{{index .RepoDigests 0}}' || true

    # Snyk container scan
    - name: Snyk container scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        IMAGE_PATH: docker.cloudsmith.io/${{ env.CS_ORG }}/${{ env.CS_REPO }}/django:latest
      run: |
        npm -g i snyk
        snyk auth "${SNYK_TOKEN}"
        # test but don't fail the build; tighten threshold or remove '|| true' as needed
        snyk container test "$IMAGE_PATH" --severity-threshold=high || true
        # publish results to Snyk projects
        snyk container monitor "$IMAGE_PATH"
