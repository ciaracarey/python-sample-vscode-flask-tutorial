trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  CS_ORG: 'globex-innovations'
  CS_REPO: 'acme-nonprod'
  CS_SERVICE_SLUG: 'ci_acme_service'   # service account slug (username for Basic Auth)

# Define CLOUDSMITH_API_KEY as a SECRET variable in the pipeline UI/Library, not here.

steps:
- checkout: self

# Install Cloudsmith CLI and verify identity (uses API key)
- bash: |
    set -euo pipefail
    install_dir="$HOME/.local/bin"
    mkdir -p "$install_dir"
    curl -sSL \
      'https://dl.cloudsmith.io/public/cloudsmith/cli-zipapp/raw/names/cloudsmith-cli/versions/latest/cloudsmith.pyz' \
      -o "$install_dir/cloudsmith"
    chmod +x "$install_dir/cloudsmith"
    echo "##vso[task.prependpath]$install_dir"

    export CLOUDSMITH_API_KEY="$(CLOUDSMITH_API_KEY)"
    cloudsmith --version
    cloudsmith whoami
  displayName: "Install Cloudsmith CLI + whoami"

# Example: use API key for pip install (Basic Auth in URL)
- task: UsePythonVersion@0
  inputs: { versionSpec: '3.12' }
  displayName: "Use Python 3.12"

- bash: |
    set -euo pipefail
    python -m pip install --upgrade pip
    # Azure masks secret values in logs. Avoid -v to reduce log noise.
    pip install -r requirements.txt \
      --index-url "https://$(CS_SERVICE_SLUG):$(CLOUDSMITH_API_KEY)@dl.cloudsmith.io/basic/$(CS_ORG)/$(CS_REPO)/python/simple/"
  displayName: "pip install from Cloudsmith"

# (Optional) Docker example with API key
# - bash: |
#     set -euo pipefail
#     echo "$(CLOUDSMITH_API_KEY)" | docker login -u "$(CS_SERVICE_SLUG)" --password-stdin "docker.cloudsmith.io"
#     docker pull docker.cloudsmith.io/$(CS_ORG)/$(CS_REPO)/alpine:latest
#   displayName: "Docker login + pull from Cloudsmith"
