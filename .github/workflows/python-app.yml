name: Python application

on:
  push: 
    branches: ["main"]  
  pull_request: 
    branches: ["main"]
  workflow_dispatch: 

permissions:
  contents: read
  id-token: write  # Necessary for GH Identity Provider to write the JWT token which Cloudsmith needs to read

env:
  CS_ORG: globex-innovations
  CS_REPO: future-nonprod
  SERVICE: ci_future_service
  CS_DOCKER_REGISTRY: docker.cloudsmith.io

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Auth to Cloudsmith with OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace: ${{ env.CS_ORG }}
          oidc-service-slug: ${{ env.SERVICE }}
          oidc-auth-only: 'true'
          
      # After authenticating with Cloudsmith, set the PIP_INDEX_URL environment variable
      - name: Set PIP index URL for Cloudsmith
        run: |
          echo "PIP_INDEX_URL=https://token:$CLOUDSMITH_API_KEY@dl.cloudsmith.io/basic/${{ env.CS_ORG }}/${{ env.CS_REPO }}/python/simple/" >> $GITHUB_ENV
  
      #- name: Install dependencies
      #  run: |
      #    python -m pip install --upgrade pip
      #    pip install flake8 pytest --index-url $PIP_INDEX_URL
      #    if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url $PIP_INDEX_URL; fi
      
      # 5. Install dependencies with **uv**
      - name: Install deps (uv)
        run: |
          pip install uv                          # bootstrap once
          uv pip install --system --upgrade pip
          uv pip install --system flake8 pytest            # tooling
          if [ -f requirements.txt ]; then \
            uv pip install --system -r requirements.txt; fi

      # 6. Run tests
      - name: Run tests
        run: pytest -q

      # 7. Build wheel + sdist
      - name: Build package
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          uv pip install --system build
          python -m build

      # 8. Upload to Cloudsmith (twine)
      - name: Publish to Cloudsmith
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          uv pip install twine
          twine upload \
            --repository-url https://api.cloudsmith.io/python/${{ env.CS_ORG }}/${{ env.CS_REPO }}/ \
            --username token \
            --password $CLOUDSMITH_API_KEY \
            dist/*


