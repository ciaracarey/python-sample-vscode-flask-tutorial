name: Terraform

on:
  workflow_dispatch:  # This allows manual triggering of the workflow

permissions:
  contents: read
  id-token: write  # Necessary for GH Identity Provider to write the JWT token which Cloudsmith needs to read

env:
  CS_ORG: ciara-demo  # Your Cloudsmith organization slug
  
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0  # Specify the desired Terraform version

      # OIDC token retrieval and authentication with Cloudsmith
      - name: Authenticate to Cloudsmith using OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.0
        with:
          oidc-namespace: ${{ env.CS_ORG }}
          oidc-service-slug: gha-service  # Use the already created service account

      - name: Terraform Init
        working-directory: ./terraform  # Set the correct working directory
        run: terraform init

      - name: List Terraform State
        working-directory: ./terraform  # Set the correct working directory
        run: terraform state list  # This will show what resources Terraform is tracking

      - name: Terraform Plan
        working-directory: ./terraform  # Set the correct working directory
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform  # Set the correct working directory
        run: terraform apply -auto-approve
