# azure-pipelines.yml
trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  CS_ORG: 'globex-innovations'
  CS_REPO: 'acme-nonprod'
  CS_SERVICE_SLUG: 'ci_acme_service'   # Cloudsmith service account slug
  CS_PROVIDER_URL: 'https://vstoken.dev.azure.com/BotConsulting/'  # Issuer you configured in Cloudsmith

steps:
- checkout: self

# (Optional) Show the ADO OIDC provider URL you can call
- bash: |
    echo "System OIDC Provider URL:"
    echo "$(System.OidcRequestUri)"
    echo
    echo "With API version + audience=cloudsmith:"
    echo "$(System.OidcRequestUri)?api-version=7.1&audience=cloudsmith"
  displayName: "Print OIDC provider URL (info)"

- bash: |
    set -euo pipefail
    # Mint a token directly from ADO
    OIDC_TOKEN=$(curl -s -X POST \
      -H "Authorization: Bearer $(System.AccessToken)" \
      -H "Content-Length: 0" \
      "$(System.OidcRequestUri)?api-version=7.1&audience=cloudsmith" \
      | jq -r '.oidcToken')

    echo "Token length: ${#OIDC_TOKEN}"

    echo "--- Header ---"
    echo "$OIDC_TOKEN" | cut -d '.' -f1 | base64 -d 2>/dev/null | jq .

    echo "--- Claims ---"
    echo "$OIDC_TOKEN" | cut -d '.' -f2 | base64 -d 2>/dev/null | jq .
  displayName: "Show OIDC token claims"

- bash: |
    set -euo pipefail

    OIDC_TOKEN=$(curl -s -X POST \
      -H "Authorization: Bearer $(System.AccessToken)" \
      -H "Content-Length: 0" \
      "$(System.OidcRequestUri)?api-version=7.1&audience=cloudsmith" \
      | jq -r '.oidcToken')

    [ -n "$OIDC_TOKEN" ] && [ "$OIDC_TOKEN" != "null" ] || { echo "Failed to mint ADO OIDC token"; exit 1; }

    # (Optional) Inspect, but don't fail the step if decode complains about padding
    echo "$OIDC_TOKEN" | awk -F. '{print $2}' | base64 -d 2>/dev/null | jq '{iss,aud,sub}' || true

    CSM_TOKEN=$(curl -s -X POST \
      -H "Content-Type: application/json" \
      -d "{\"oidc_token\":\"$OIDC_TOKEN\",\"service_slug\":\"$(CS_SERVICE_SLUG)\"}" \
      "https://api.cloudsmith.io/openid/$(CS_ORG)/" \
      | jq -r '.token')

    [ -n "$CSM_TOKEN" ] && [ "$CSM_TOKEN" != "null" ] || { echo "Failed to obtain Cloudsmith token"; exit 1; }

    echo "##vso[task.setvariable variable=CLOUDSMITH_API_KEY;issecret=true]$CSM_TOKEN"
  displayName: "Mint Cloudsmith token via ADO OIDC"

# Install Cloudsmith CLI (zipapp) and run whoami
- bash: |
    set -euo pipefail
    install_dir="$HOME/.local/bin"
    mkdir -p "$install_dir"
    curl -sSL \
      'https://dl.cloudsmith.io/public/cloudsmith/cli-zipapp/raw/names/cloudsmith-cli/versions/latest/cloudsmith.pyz' \
      -o "$install_dir/cloudsmith"
    chmod +x "$install_dir/cloudsmith"
    echo "##vso[task.prependpath]$install_dir"

    # Use the OIDC-exchanged token from the previous step
    export CLOUDSMITH_API_KEY="$(CLOUDSMITH_API_KEY)"

    cloudsmith --version
    cloudsmith whoami
  displayName: "Install Cloudsmith CLI + whoami"

- task: UsePythonVersion@0
  inputs: { versionSpec: '3.12' }
  displayName: "Use Python 3.12"

- bash: |
    set -euo pipefail
    python -m pip install --upgrade pip
    pip install -r requirements.txt \
      --index-url "https://$(CS_SERVICE_SLUG):$(CLOUDSMITH_API_KEY)@dl.cloudsmith.io/basic/$(CS_ORG)/$(CS_REPO)/python/simple/"
  displayName: "pip install from Cloudsmith"
