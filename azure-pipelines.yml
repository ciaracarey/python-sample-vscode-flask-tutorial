trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  CS_ORG: 'globex-innovations'
  CS_REPO: 'acme-nonprod'
  CS_SERVICE_SLUG: 'ci_acme_service'   # username for Basic Auth if needed elsewhere
  # CLOUDSMITH_API_KEY is a SECRET pipeline variable

steps:
- checkout: self

# ===== Python (unchanged) =====
- task: UsePythonVersion@0
  inputs: { versionSpec: '3.12' }
  displayName: "Use Python 3.12"

- bash: |
    set -euo pipefail
    python -m pip install --upgrade pip
    pip install -r requirements.txt \
      --index-url "https://${CS_SERVICE_SLUG}:${CLOUDSMITH_API_KEY}@dl.cloudsmith.io/basic/${CS_ORG}/${CS_REPO}/python/simple/"
  displayName: "pip install from Cloudsmith"

# ===== Node.js / npm from Cloudsmith =====
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: "Use Node.js 20"

# If your packages are SCOPED (recommended): set registry for that scope only
- bash: |
    set -euo pipefail
    SCOPE="@your-scope"  # e.g. @acme
    npm config set ${SCOPE}:registry https://npm.cloudsmith.io/${CS_ORG}/${CS_REPO}/
    npm config set //npm.cloudsmith.io/${CS_ORG}/${CS_REPO}/:_authToken=${CLOUDSMITH_API_KEY}
    npm config set always-auth true

    # Install from package.json
    npm ci

    # Example: fetch a single package explicitly (optional)
    npm install ${SCOPE}/some-package@latest
  displayName: "npm install from Cloudsmith (scoped)"

# If your packages are UNSCOPED, use this block instead of the one above:
# - bash: |
#     set -euo pipefail
#     npm config set registry https://npm.cloudsmith.io/${CS_ORG}/${CS_REPO}/
#     npm config set //npm.cloudsmith.io/${CS_ORG}/${CS_REPO}/:_authToken=${CLOUDSMITH_API_KEY}
#     npm config set always-auth true
#     npm ci
#     # Example: fetch a single package explicitly (optional)
#     npm install some-unscoped-package@latest
#   displayName: "npm install from Cloudsmith (unscoped)"

